时间:9:50 2014-8-12
访问修饰符只用于成员变量和成员方法
局部变量不能使用访问修饰符

受保护类型变量,子类可以继承,不能用父类的对象调用

************************************************
*      *public * protected * default * private *
************************************************
*同类  * √     * √        * √       * √     *
************************************************
*同包  * √     * √        * √       *        *
************************************************
*不同包* √     * √        *          *        *
*子类  * √     * √        *          *        *
************************************************
*其他包* √     *           *          *        *
************************************************

class A{
	private void abc();
}

class B extends A{
		
}

B b=new B();
b.abc //错误,父类的私有方法在子类中没法用

	重写方法时的访问修饰符必须大于父类重写方法的访问修饰符

static特点:
	1.static 可以修饰属性\方法\静态块\类
	2.static 方法\属性 不需要通过对象,直接通过类名调用

	3.内存中多个对象共用一个变量
	4.静态属性是多对象所共用的空间(考试几率高)

	5.静态方法中必须访问静态数据
	6.静态方法中不能使用super 和 this 关键字
	
静态块:
	1.不存在任何方法中
	2.静态块在类被加载时使用,在调用构造器之前调用
	3.静态块只允许使用静态属性
	4.静态块只调用一次

	//静态块
	static {
	   int a=10;
	}



final 修饰符可应用于类\方法\属性

	修饰的变量不能被二次赋值,
	方法不能被重写,
	类不能被继承
	final变量相当于常量
	final修饰的属性必须初始化值,因为不能二次赋值.
	方法中的final修饰的变量可以先声明后赋值,但不能再次被赋值


时间:11:21 2014-8-12

abstract 修饰符
	抽象类:用abstract修饰的类就是抽象类,抽象类可以有属性\方法\抽象方法
	      抽象方法只有声明没有实现
	      抽象类不能被实例化,只能被其他类继承后,重写所有的抽象方法,当一个类未能实现继承的抽象类的所有方法时,该类必须设为抽象类
	      构造方法和静态方法不能使抽象的
	      一个抽象类中可以全是抽象方法,也可以没有抽象方法
	      

	抽象类声明,子类实例化也可以.
	子类必须实现所有的抽象类的方法,否则也必须是抽象类
	抽象父类不能调用抽象子类的方法

	抽象方法必须声明在抽象类中
	抽象方法:用abstract修饰的方法就是抽象方法
		抽象方法只有方法的声明没有方法的实现
为啥使用抽象类:????


时间:11:56 2014-8-12

时间: 14:09 2014-8-12
接口:
	接口可以有属性,默认类型为public static final
	接口中声明的方法全部都是public abstract  
	接口只有方法的声明,没有方法的实现
	接口允许多继承
	接口不能被实例化,必须由类实现,实现时必须实现所有的方法声明
	一个类可以实现许多接口,implements 


类可以继承父类并且同时实现接口
------------------------------------------------------------

什么时候用抽象类\接口??
满足A is B 关系时,使用抽象类,不符合继承关系时使用接口实现

------------------------------------------------------------

与抽象类的区别: 抽象类可以有方法的实现,而接口不行

抽象类和接口的异同？
	抽象类和接口都不能被实例化。

	抽象类里可以没有抽象方法,
	抽象类单继承，通过子类继承，重写抽象方法,
	抽象类有构造方法。

	接口中必须都为抽象方法，
	接口多继承，通过类实现抽象方法.
	接口没有构造方法方法。


接口补充:
	接口是常量和抽象方法的集合。
	接口对类来说是一套标准与规范。
	接口也弥补了Java单一继承的弱点。
	使用interface关键字定义接口